services:
  gateway:
    image: gateway
    build:
      context: ../
      dockerfile: ./gateway/Dockerfile
    ports:
      - 8080:8080
    environment:
      PORT: "8080"
      JWT_SECRET: "veryverysecretkey"
      ROOT_EMAIL: "admin@nanobank.com"
      ROOT_PASSWORD: "password"
      API_URL_AUTH: "http://auth-service:8081"
      API_URL_ACCOUNT: "http://account-service:8082"
      API_URL_REDIS: "redis:6379"
    depends_on:
      - redis
      - postgres

  auth-service:
    image: auth-service
    build:
      context: ../
      dockerfile: ./auth-service/Dockerfile
    ports:
      - 8081:8080
    environment:
      PORT: "8081"
      JWT_SECRET: "veryverysecretkey"
      DNS: "postgres://user:password@postgres:5432/authdb?sslmode=disable&connect_timeout=5"
      ROOT_EMAIL: "admin@nanobank.com"
      ROOT_PASSWORD: "password"
      API_URL_REDIS: "redis:6379"
    depends_on:
      - gateway

  account-service:
    image: account-service
    build:
      context: ../
      dockerfile: ./account-service/Dockerfile
    ports:
      - 8082:8080
    environment:
      PORT: "8082"
      DNS: "postgres://user:password@postgres:5432/accountdb?sslmode=disable&connect_timeout=5"
    depends_on:
      - gateway

  redis:
    image: docker.arvancloud.ir/redis:alpine
    ports:
      - 6379:6379

  postgres:
    image: docker.arvancloud.ir/postgres:14.0
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - ../db-data/postgres/:/var/lib/postgresql/data/
      - ../db/init-authdb.sql:/docker-entrypoint-initdb.d/init-authdb.sql
      - ../db/init-accountdb.sql:/docker-entrypoint-initdb.d/init-accountdb.sql
    command: | 
      bash -c "
        docker-entrypoint.sh postgres &
        until pg_isready -U user; do
          echo 'Waiting for Postgres to be ready...'
          sleep 2
        done &&
        psql -U user -tc \"SELECT 1 FROM pg_database WHERE datname = 'authdb';\" | grep -q 1 || psql -U user -c 'CREATE DATABASE authdb;' &&
        echo 'Running scheme for authdb...' &&
        psql -U user -d authdb -f /docker-entrypoint-initdb.d/init-authdb.sql &&
        psql -U user -tc \"SELECT 1 FROM pg_database WHERE datname = 'acountdb';\" | grep -q 1 || psql -U user -c 'CREATE DATABASE accountdb;' &&
        echo 'Running scheme for accountdb...' &&
        psql -U user -d accountdb -f /docker-entrypoint-initdb.d/init-accountdb.sql &&
        tail -f /dev/null
      "
